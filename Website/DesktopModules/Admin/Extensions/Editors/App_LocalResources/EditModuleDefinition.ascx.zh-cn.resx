<?xml version="1.0" encoding="utf-8"?>
<root>
	<!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
	<xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
		<xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
		<xsd:element name="root" msdata:IsDataSet="true">
			<xsd:complexType>
				<xsd:choice maxOccurs="unbounded">
					<xsd:element name="metadata">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" />
							</xsd:sequence>
							<xsd:attribute name="name" use="required" type="xsd:string" />
							<xsd:attribute name="type" type="xsd:string" />
							<xsd:attribute name="mimetype" type="xsd:string" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="assembly">
						<xsd:complexType>
							<xsd:attribute name="alias" type="xsd:string" />
							<xsd:attribute name="name" type="xsd:string" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="data">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
								<xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
							<xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
							<xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
							<xsd:attribute ref="xml:space" />
						</xsd:complexType>
					</xsd:element>
					<xsd:element name="resheader">
						<xsd:complexType>
							<xsd:sequence>
								<xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
							</xsd:sequence>
							<xsd:attribute name="name" type="xsd:string" use="required" />
						</xsd:complexType>
					</xsd:element>
				</xsd:choice>
			</xsd:complexType>
		</xsd:element>
	</xsd:schema>
	<resheader name="resmimetype">
		<value>text/microsoft-resx</value>
	</resheader>
	<resheader name="version">
		<value>2.0</value>
	</resheader>
	<resheader name="reader">
		<value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<resheader name="writer">
		<value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
	</resheader>
	<data name="Add.Title" xml:space="preserve">
    <value>创建新模块</value>
  </data>
	<data name="Edit.Title" xml:space="preserve">
    <value>编辑模块</value>
  </data>
	<data name="cmdCreate.Text" xml:space="preserve">
    <value>创建模块</value>
  </data>
	<data name="Control.Text" xml:space="preserve">
    <value>控制</value>
  </data>
	<data name="Manifest.Text" xml:space="preserve">
    <value>显示 ？</value>
  </data>
	<data name="New.Text" xml:space="preserve">
    <value>新</value>
  </data>
	<data name="plAddPage.Help" xml:space="preserve">
    <value>启用此项以创建测试页。</value>
  </data>
	<data name="plAddPage.Text" xml:space="preserve">
    <value>增加测试页？</value>
  </data>
	<data name="plCreate.Help" xml:space="preserve">
    <value>有三种方式可以创建一个新的模块。选择使用哪种方法。新模块 - 创建一个空白的新模块，继承 - 创建一个继承已有模块设置的新模块，清单 - 创建一个完全继承的新模块。</value>
  </data>
	<data name="plCreate.Text" xml:space="preserve">
    <value>创建方式:</value>
  </data>
	<data name="plDescription.Help" xml:space="preserve">
    <value>您可以为您的模块提供描述。</value>
  </data>
	<data name="plDescription.Text" xml:space="preserve">
    <value>描述</value>
  </data>
	<data name="plFile1.Help" xml:space="preserve">
    <value>选择您要创建模块的资源。</value>
  </data>
	<data name="plFile1.Text" xml:space="preserve">
    <value>资源</value>
  </data>
	<data name="plModule1.Help" xml:space="preserve">
    <value>您的模块资源所在的目录</value>
  </data>
	<data name="plModule1.Text" xml:space="preserve">
    <value>模块目录:</value>
  </data>
	<data name="plName.Help" xml:space="preserve">
    <value>段名称</value>
  </data>
	<data name="plName.Text" xml:space="preserve">
    <value>模块名称：</value>
  </data>
	<data name="plOwner1.Help" xml:space="preserve">
    <value>模块开发，鼓励使用一个“独特”的文件夹内的所有发展的DesktopModules的，以避免与其他开发人员的潜在冲突。选择的文件夹，你想用你的模块发展。注：用户控件（。ascx文件）和核心admin文件夹的文件夹从这个名单中排除</value>
  </data>
	<data name="plOwner1.Text" xml:space="preserve">
    <value>专有文件夹:</value>
  </data>
	<data name="Template.Text" xml:space="preserve">
    <value>模板</value>
  </data>
	<data name="cmdAdd.Text" xml:space="preserve">
    <value>增加文件夹</value>
  </data>
	<data name="cmdCancel.Text" xml:space="preserve">
    <value>取消</value>
  </data>
	<data name="cmdSave.Text" xml:space="preserve">
    <value>创建文件夹</value>
  </data>
	<data name="CSharp.Text" xml:space="preserve">
    <value>C# (C sharp)</value>
  </data>
	<data name="LanguageError.Text" xml:space="preserve">
    <value>您必须为模块选择一个语言。</value>
  </data>
	<data name="ModuleControlTemplate.Text" xml:space="preserve">
    <value>&lt;%@ Control Language="{0}" ClassName="{1}" Inherits="DotNetNuke.Entities.Modules.PortalModuleBase" %&gt;
&lt;h1&gt;Congratulations&lt;/h1&gt;
&lt;p&gt;You have successfully created your module.  You can edit the source of the module control by selecting the View Source Action from the Action Menu.&lt;/p&gt;
&lt;script runat="server"&gt;

&lt;/script&gt;</value>
  </data>
	<data name="plFile2.Help" xml:space="preserve">
    <value>填写一个模块名称</value>
  </data>
	<data name="plFile2.Text" xml:space="preserve">
    <value>文件名称:</value>
  </data>
	<data name="VisualBasic.Text" xml:space="preserve">
    <value>Visual Basic</value>
  </data>
	<data name="FileExists.Text" xml:space="preserve">
    <value>您选择的文件名已经存在。请使用不同的名称。</value>
  </data>
	<data name="ModuleFolder.Text" xml:space="preserve">
    <value>你必须选择一个模块文件夹。  您也可以创建一个。</value>
  </data>
	<data name="TabExists.Text" xml:space="preserve">
    <value>页面的名称存在这个模块的名称。该模块被创建，但不会产生测试页。</value>
  </data>
	<data name="plModule2.Help" xml:space="preserve">
    <value>为新的模块目录创建名称</value>
  </data>
	<data name="plModule2.Text" xml:space="preserve">
    <value>文件夹名称:</value>
  </data>
	<data name="plOwner2.Help" xml:space="preserve">
    <value>专有文件夹名称</value>
  </data>
	<data name="plOwner2.Text" xml:space="preserve">
    <value>文件夹名:</value>
  </data>
	<data name="plLang.Help" xml:space="preserve">
    <value>选择一个语言</value>
  </data>
	<data name="plLang.Text" xml:space="preserve">
    <value>语言:</value>
  </data>
	<data name="ImportControl.ErrorMessage" xml:space="preserve">
    <value>导入模块时产生一个错误，有关详细信息，请参阅事件日志</value>
  </data>
	<data name="InvalidFilename.Text" xml:space="preserve">
    <value>文件名不能包含无效字符</value>
  </data>
	<data name="MissingControl.Text" xml:space="preserve">
    <value>您必须为模块名提供一个可用的文件名。</value>
  </data>
	<data name="MissingFriendlyname.Text" xml:space="preserve">
    <value>您必须为模块提供一个可用的模块</value>
  </data>
	<data name="NonuniqueName.Text" xml:space="preserve">
    <value>名称重复 - 请提供替代名称</value>
  </data>
  <data name="NonuniqueNameModule.Text" xml:space="preserve">
    <value>The module from the selected location exists and registered as {0}</value>
  </data>
  <data name="MissingManifest.Text" xml:space="preserve">
    <value>你必须提供一个描述文件(.dnn or .dnn5 file)</value>
  </data>
	<data name="NoControl.Text" xml:space="preserve">
    <value>您必须从资源列表中选择。</value>
  </data>
</root>
