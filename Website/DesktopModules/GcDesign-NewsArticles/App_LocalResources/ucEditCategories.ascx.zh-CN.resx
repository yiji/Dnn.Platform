<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="NoCategoriesMessage.Text" xml:space="preserve">
    <value>&lt;br&gt;目前没有栏目.</value>
  </data>
  <data name="cmdAddNewCategory.Text" xml:space="preserve">
    <value>添加新栏目</value>
  </data>
  <data name="ControlTitle_editcategories.Text" xml:space="preserve">
    <value>编辑栏目</value>
  </data>
  <data name="ModuleHelp.Text" xml:space="preserve">
    <value>&lt;h1&gt;关于编辑栏目&lt;/h1&gt;&lt;p&gt;管理员可以编辑此模块的栏目.&lt;/p&gt;</value>
  </data>
  <data name="Actions.Text" xml:space="preserve">
    <value>动作</value>
  </data>
  <data name="CategoryUpdated.Text" xml:space="preserve">
    <value>栏目排序更新.</value>
  </data>
  <data name="ChildCategories.Help" xml:space="preserve">
    <value>选中的父栏目下的子栏目</value>
  </data>
  <data name="ChildCategories.Text" xml:space="preserve">
    <value>子栏目</value>
  </data>
  <data name="cmdDown.Help" xml:space="preserve">
    <value>向下移动栏目</value>
  </data>
  <data name="cmdEdit.Help" xml:space="preserve">
    <value>编辑栏目</value>
  </data>
  <data name="cmdUp.Help" xml:space="preserve">
    <value>向上移动栏目</value>
  </data>
  <data name="cmdUpdateSortOrder.Text" xml:space="preserve">
    <value>更新栏目排序</value>
  </data>
  <data name="cmdView.Help" xml:space="preserve">
    <value>查看栏目</value>
  </data>
  <data name="MoveCategory.Text" xml:space="preserve">
    <value>移动栏目</value>
  </data>
  <data name="NoParentCategory.Text" xml:space="preserve">
    <value>-- 没有父级栏目 --</value>
  </data>
  <data name="ParentCategory.Help" xml:space="preserve">
    <value>选择一个父级栏目来过滤.</value>
  </data>
  <data name="ParentCategory.Text" xml:space="preserve">
    <value>父级栏目</value>
  </data>
  <data name="NoCategories.Text" xml:space="preserve">
    <value>当前没有栏目.</value>
  </data>
  <data name="CategoryHasExist.Text" xml:space="preserve">
    <value>目标栏目下已存在同名栏目</value>
  </data>
  <data name="CategoryMoved.Text" xml:space="preserve">
    <value>栏目移动成功</value>
  </data>
  <data name="CategoryImage.Help" xml:space="preserve">
    <value>为栏目指定一张图片. </value>
  </data>
  <data name="CategoryImage.Text" xml:space="preserve">
    <value>Image</value>
  </data>
  <data name="CategorySettings.Text" xml:space="preserve">
    <value>栏目设置</value>
  </data>
  <data name="CategorySettingsDescription.Text" xml:space="preserve">
    <value>在此节点下编辑栏目.</value>
  </data>
  <data name="ControlTitle_editcategory.Text" xml:space="preserve">
    <value>编辑栏目</value>
  </data>
  <data name="Description.Help" xml:space="preserve">
    <value>设置栏目描述.</value>
  </data>
  <data name="Description.Text" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="InheritSecurity.Help" xml:space="preserve">
    <value>不选来重写模块的安全角色.</value>
  </data>
  <data name="InheritSecurity.Text" xml:space="preserve">
    <value>继承安全?</value>
  </data>
  <data name="Loose.Text" xml:space="preserve">
    <value>Loose - You only have to the meet the requirement of ONE category on an article.</value>
  </data>
  <data name="Meta.Text" xml:space="preserve">
    <value>Meta Information</value>
  </data>
  <data name="ModuleHelp.Text1" xml:space="preserve">
    <value>&lt;h1&gt;关于编辑栏目&lt;/h1&gt;&lt;p&gt;可在此模块编辑栏目.&lt;/p&gt;</value>
  </data>
  <data name="Name.Help" xml:space="preserve">
    <value>输入栏目名称.</value>
  </data>
  <data name="Name.Text" xml:space="preserve">
    <value>名称</value>
  </data>
  <data name="NoParentCategory.Text1" xml:space="preserve">
    <value>-- 没有父级栏目 --</value>
  </data>
  <data name="Parent.Help" xml:space="preserve">
    <value>可选，选择父栏目.</value>
  </data>
  <data name="Parent.Text" xml:space="preserve">
    <value>父栏目</value>
  </data>
  <data name="Permissions.Help" xml:space="preserve">
    <value>选择这些角色的权限，查看权限是管谁可以看到这篇文章，提交是管谁可以添加文章到该栏目.</value>
  </data>
  <data name="Permissions.Text" xml:space="preserve">
    <value>权限</value>
  </data>
  <data name="plMetaDescription.Help" xml:space="preserve">
    <value>可选，重写栏目描述.</value>
  </data>
  <data name="plMetaDescription.Text" xml:space="preserve">
    <value>描述</value>
  </data>
  <data name="plMetaKeyWords.Help" xml:space="preserve">
    <value>可选，重写栏目关键字.</value>
  </data>
  <data name="plMetaKeyWords.Text" xml:space="preserve">
    <value>关键字</value>
  </data>
  <data name="plMetaTitle.Help" xml:space="preserve">
    <value>可选，重写栏目的标题.</value>
  </data>
  <data name="plMetaTitle.Text" xml:space="preserve">
    <value>标题</value>
  </data>
  <data name="Restrict.Text" xml:space="preserve">
    <value>Restrictive - You must meet the requirements of ALL categories on an article.</value>
  </data>
  <data name="Security.Text" xml:space="preserve">
    <value>安全设置</value>
  </data>
  <data name="SecurityMode.Help" xml:space="preserve">
    <value>选择安全模式。</value>
  </data>
  <data name="SecurityMode.Text" xml:space="preserve">
    <value>安全模式</value>
  </data>
  <data name="Submit.Text" xml:space="preserve">
    <value>提交</value>
  </data>
  <data name="Tab.Text" xml:space="preserve">
    <value>模版</value>
  </data>
  <data name="TabType.Text" xml:space="preserve">
    <value>模版所在页</value>
  </data>
  <data name="Template.Text" xml:space="preserve">
    <value>模版</value>
  </data>
  <data name="valInvalidParentCategory.Text" xml:space="preserve">
    <value>&lt;br&gt;无效的父类。可能导致检测。</value>
  </data>
  <data name="valName.Text" xml:space="preserve">
    <value>&lt;br&gt;必须输入正确的标题</value>
  </data>
  <data name="View.Text" xml:space="preserve">
    <value>查看</value>
  </data>
</root>