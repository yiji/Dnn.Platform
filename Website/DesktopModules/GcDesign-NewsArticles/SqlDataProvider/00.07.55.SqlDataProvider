ALTER TABLE {databaseOwner}{objectQualifier}GcDesign_Searches_Article ADD
	ShortUrl nvarchar(50) NULL
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_AddArticle
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_AddArticle
	@AuthorID int,
	@ApproverID int,
	@CreatedDate datetime,
	@LastUpdate datetime,
	@Title nvarchar(255),
	@Summary ntext,
	@IsApproved bit,
	@NumberOfViews int,
	@IsDraft bit,
	@StartDate DateTime,
	@EndDate DateTime,
	@ModuleID int,
	@ImageUrl nvarchar(255),
	@IsFeatured bit, 
	@LastUpdateID int, 
	@Url nvarchar(255),
	@IsSecure bit,
	@IsNewWindow bit,
	@MetaTitle nvarchar(200),
	@MetaDescription nvarchar(500),
	@MetaKeywords nvarchar(500),
	@PageHeadText nvarchar(500), 
	@ShortUrl nvarchar(50)
AS

INSERT INTO {databaseOwner}{objectQualifier}GcDesign_Searches_Article (
	[AuthorID],
	[ApproverID],
	[CreatedDate],
	[LastUpdate],
	[Title],
	[Summary],
	[IsApproved],
	[NumberOfViews],
	[IsDraft],
	[StartDate],
	[EndDate],
	[ModuleID],
	[ImageUrl],
	[IsFeatured], 
	[LastUpdateID], 
	[Url],
	[IsSecure],
	[IsNewWindow],
	[MetaTitle],
	[MetaDescription],
	[MetaKeywords],
	[PageHeadText],
	[ShortUrl]  
) VALUES (
	@AuthorID,
	@ApproverID,
	@CreatedDate,
	@LastUpdate,
	@Title,
	@Summary,
	@IsApproved,
	@NumberOfViews,
	@IsDraft,
	@StartDate,
	@EndDate,
	@ModuleID,
	@ImageUrl,
	@IsFeatured,
	@LastUpdateID,
	@Url,
	@IsSecure,
	@IsNewWindow,
	@MetaTitle,
	@MetaDescription,
	@MetaKeywords,
	@PageHeadText,
	@ShortUrl     
)

select SCOPE_IDENTITY()

UPDATE {databaseOwner}{objectQualifier}GcDesign_Searches_Article
SET [PageCount] = (select count(*) from {databaseOwner}{objectQualifier}GcDesign_Searches_Page Page where Page.ArticleID = {databaseOwner}{objectQualifier}GcDesign_Searches_Article.ArticleID)
WHERE ArticleID = SCOPE_IDENTITY()

UPDATE {databaseOwner}{objectQualifier}GcDesign_Searches_Article
SET [CommentCount] = (select count(*) from {databaseOwner}{objectQualifier}GcDesign_Searches_Comment Comment where Comment.ArticleID = {databaseOwner}{objectQualifier}GcDesign_Searches_Article.ArticleID and Comment.IsApproved = 1)
WHERE ArticleID = SCOPE_IDENTITY()

UPDATE {databaseOwner}{objectQualifier}GcDesign_Searches_Article
SET [Rating] = (select AVG(rating) from {databaseOwner}{objectQualifier}GcDesign_Searches_Rating Rating where Rating.ArticleID = {databaseOwner}{objectQualifier}GcDesign_Searches_Article.ArticleID)
WHERE [ArticleID] = SCOPE_IDENTITY() 

UPDATE {databaseOwner}{objectQualifier}GcDesign_Searches_Article
SET [RatingCount] = (select COUNT(*) from {databaseOwner}{objectQualifier}GcDesign_Searches_Rating Rating where Rating.ArticleID = {databaseOwner}{objectQualifier}GcDesign_Searches_Article.ArticleID)
WHERE [ArticleID] = SCOPE_IDENTITY() 
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_UpdateArticle
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_UpdateArticle
	@ArticleID int, 
	@AuthorID int, 
	@ApproverID int, 
	@CreatedDate datetime, 
	@LastUpdate datetime, 
	@Title nvarchar(255), 
	@Summary ntext, 
	@IsApproved bit, 
	@NumberOfViews int, 
	@IsDraft bit,
	@StartDate DateTime,
	@EndDate DateTime,
	@ModuleID int,
	@ImageUrl nvarchar(255),
	@IsFeatured bit, 
	@LastUpdateID int, 
	@Url nvarchar(255),
	@IsSecure bit,
	@IsNewWindow bit,
	@MetaTitle nvarchar(200),
	@MetaDescription nvarchar(500),
	@MetaKeywords nvarchar(500),
	@PageHeadText nvarchar(500),
	@ShortUrl nvarchar(50)   
AS

UPDATE {databaseOwner}{objectQualifier}GcDesign_Searches_Article SET
	[AuthorID] = @AuthorID,
	[ApproverID] = @ApproverID,
	[CreatedDate] = @CreatedDate,
	[LastUpdate] = @LastUpdate,
	[Title] = @Title,
	[Summary] = @Summary,
	[IsApproved] = @IsApproved,
	[NumberOfViews] = @NumberOfViews,
	[IsDraft] = @IsDraft,
	[StartDate] = @StartDate,
	[EndDate] = @EndDate,
	[ModuleID] = @ModuleID,
	[ImageUrl] = @ImageUrl,
	[IsFeatured] = @IsFeatured, 
	[LastUpdateID] = @LastUpdateID, 
	[Url] = @Url,
	[IsSecure] = @IsSecure,
	[IsNewWindow] = @IsNewWindow,
	[MetaTitle] = @MetaTitle,
	[MetaDescription] = @MetaDescription,
	[MetaKeywords] = @MetaKeywords,
	[PageHeadText] = @PageHeadText,
	[ShortUrl] = @ShortUrl     
WHERE
	[ArticleID] = @ArticleID

UPDATE {databaseOwner}{objectQualifier}GcDesign_Searches_Article
SET [PageCount] = (select count(*) from {databaseOwner}{objectQualifier}GcDesign_Searches_Page Page where Page.ArticleID = {databaseOwner}{objectQualifier}GcDesign_Searches_Article.ArticleID)
WHERE ArticleID = @ArticleID

UPDATE {databaseOwner}{objectQualifier}GcDesign_Searches_Article
SET [CommentCount] = (select count(*) from {databaseOwner}{objectQualifier}GcDesign_Searches_Comment Comment where Comment.ArticleID = {databaseOwner}{objectQualifier}GcDesign_Searches_Article.ArticleID and Comment.IsApproved = 1)
WHERE ArticleID = @ArticleID

UPDATE {databaseOwner}{objectQualifier}GcDesign_Searches_Article
SET [Rating] = (select AVG(rating) from {databaseOwner}{objectQualifier}GcDesign_Searches_Rating Rating where Rating.ArticleID = {databaseOwner}{objectQualifier}GcDesign_Searches_Article.ArticleID)
WHERE [ArticleID] = @ArticleID

UPDATE {databaseOwner}{objectQualifier}GcDesign_Searches_Article
SET [RatingCount] = (select COUNT(*) from {databaseOwner}{objectQualifier}GcDesign_Searches_Rating Rating where Rating.ArticleID = {databaseOwner}{objectQualifier}GcDesign_Searches_Article.ArticleID)
WHERE [ArticleID] = @ArticleID
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_GetArticleListBySearchCriteria
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_GetArticleListBySearchCriteria
	@ModuleID	int,
	@CurrentDate datetime,
	@AgedDate datetime,
	@CategoryID	varchar(2000),
	@CategoryIDCount	int,
	@CategoryIDExclude	varchar(2000),
	@MaxCount int, 
	@PageNumber int, 
	@PageSize int,
	@SortBy varchar(50),
	@SortDirection varchar(50),
	@IsApproved	bit,
	@IsDraft	bit,
	@KeyWords	nvarchar(255), 
	@AuthorID	int,
	@ShowPending bit,
	@ShowExpired bit,
	@ShowFeaturedOnly bit,
	@ShowNotFeaturedOnly bit,
	@ShowSecuredOnly bit,
	@ShowNotSecuredOnly bit,
	@ArticleIDs	varchar(255), 
	@TagID varchar(2000),
	@TagIDCount int
AS

-- Form Where Query

DECLARE @strWhere	nvarchar(4000)
SELECT @strWhere = 'Article.ModuleID = ' + convert(nvarchar, @ModuleId)

IF( @CurrentDate is null )
	SELECT @CurrentDate = GetDate()

IF( @ShowPending is null )
BEGIN
	SELECT @strWhere = @strWhere + ' AND (Article.StartDate is null OR (Article.StartDate < ''' + convert(nvarchar, @CurrentDate)  + ''' AND Article.StartDate < GetDate()))'
	
	IF( @AgedDate is not null )
		SELECT @strWhere = @strWhere + ' AND Article.StartDate > ''' + convert(nvarchar, @AgedDate)  + ''''
END
ELSE
BEGIN
	IF( @CurrentDate is not null AND @AgedDate is not null )
	BEGIN
		SELECT @strWhere = @strWhere + ' AND (Article.StartDate is null OR (Article.StartDate < ''' + convert(nvarchar, @CurrentDate)  + '''))'
		
		IF( @AgedDate is not null )
			SELECT @strWhere = @strWhere + ' AND Article.StartDate > ''' + convert(nvarchar, @AgedDate)  + ''''
	END
END

IF( @ShowExpired is null )
BEGIN
	SELECT @strWhere = @strWhere + ' AND (Article.EndDate is null OR Article.EndDate > ''' + convert(nvarchar, @CurrentDate)  + ''')'
END

IF (@CategoryId is not null)
	if(@CategoryIDCount is not null)
		SELECT @strWhere = @strWhere + ' AND Article.ArticleID in ( select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories where {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.ArticleID = Article.ArticleID and {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.CategoryID in (' + @CategoryID + ') group by articleID having count(*) > ' + convert(nvarchar, @CategoryIDCount) + ')'
	else
		SELECT @strWhere = @strWhere + ' AND Article.ArticleID in ( select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories where {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.ArticleID = Article.ArticleID and {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.CategoryID in (' + @CategoryID + '))'

IF (@CategoryIDExclude is not null)
	SELECT @strWhere = @strWhere + ' AND Article.ArticleID not in ( select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories where {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.ArticleID = Article.ArticleID and {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.CategoryID in (' + @CategoryIDExclude + '))'

IF (@AuthorID is not null)
	SELECT @strWhere = @strWhere + ' AND Article.AuthorID = ' + convert(nvarchar, @AuthorID)

IF (@IsApproved = 1 )
	SELECT @strWhere = @strWhere + ' AND Article.IsApproved = 1'

IF (@IsApproved = 0 )
	SELECT @strWhere = @strWhere + ' AND Article.IsApproved = 0'

IF (@IsDraft = 0)
	SELECT @strWhere = @strWhere + ' AND Article.IsDraft = 0'

IF (@IsDraft = 1 )
	SELECT @strWhere = @strWhere + ' AND Article.IsDraft = 1'

IF (@ShowFeaturedOnly = 1 )
	SELECT @strWhere = @strWhere + ' AND Article.IsFeatured = 1'
	
IF (@ShowNotFeaturedOnly = 1 )
	SELECT @strWhere = @strWhere + ' AND Article.IsFeatured = 0'

IF (@ShowSecuredOnly = 1 )
	SELECT @strWhere = @strWhere + ' AND Article.IsSecure = 1'
	
IF (@ShowNotSecuredOnly = 1 )
	SELECT @strWhere = @strWhere + ' AND Article.IsSecure = 0'

IF (@Keywords is not null)
	SELECT @strWhere = @strWhere + ' AND (Article.Title LIKE ''%' + @Keywords + '%'' OR Article.Summary LIKE ''%' + @Keywords + '%'' OR ((select count(*) from {databaseOwner}{objectQualifier}GcDesign_Searches_Page Page where Page.ArticleID = Article.ArticleID and Page.PageText LIKE ''%' + @Keywords + '%'') > 0))'

IF (@ArticleIDs is not null)
	SELECT @strWhere = @strWhere + ' AND Article.ArticleID in (' + @ArticleIDs + ')'
	
IF (@SortBy = 'Title') 
	SELECT @SortBy = 'Article.Title'

IF (@SortBy = 'IsFeatured DESC, Title') 
	SELECT @SortBy = 'IsFeatured DESC, Article.Title'

IF (@TagID is not null)
	if(@TagIDCount is not null)
		SELECT @strWhere = @strWhere + ' AND Article.ArticleID in ( select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleTag where {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleTag.ArticleID = Article.ArticleID and {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleTag.TagID in (' + @TagID + ') group by articleID having count(*) > ' + convert(nvarchar, @TagIDCount) + ')'
	else
		SELECT @strWhere = @strWhere + ' AND Article.ArticleID in ( select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleTag where {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleTag.ArticleID = Article.ArticleID and {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleTag.TagID in (' + @TagID + '))'
	
-- Set Paging Options

IF( @PageNumber is null )
	SET @PageNumber = 1

IF( @PageSize is null )
	SET @PageSize = 100

SET @PageNumber = @PageNumber - 1

DECLARE @startRowIndex int
SET @startRowIndex = (@PageNumber * @PageSize)

DECLARE @maxRow int
SET @maxRow = (@startRowIndex + @PageSize)
IF( @MaxCount is not null )
BEGIN
	IF( @MaxCount < @MaxRow )
	BEGIN
		SET ROWCOUNT @MaxCount
	END
	ELSE
	BEGIN
		SET ROWCOUNT @maxRow
	END
END
ELSE
BEGIN
	SET ROWCOUNT @maxRow
END

-- Create Temporary Table

CREATE TABLE #TempItems 
(
   ID int IDENTITY,
   ArticleID int
)

EXEC('
INSERT INTO #TempItems (ArticleID) 
SELECT 
	Article.[ArticleID]
FROM
	{databaseOwner}{objectQualifier}GcDesign_Searches_Article Article LEFT OUTER JOIN 
    {databaseOwner}{objectQualifier}GcDesign_Searches_Page Page on Page.ArticleID = Article.ArticleID AND Page.SortOrder = 0 LEFT OUTER JOIN 
	{databaseOwner}{objectQualifier}Users Author ON Article.AuthorID = Author.UserID LEFT OUTER JOIN 
    {databaseOwner}{objectQualifier}Users Updated ON Article.LastUpdateID = Updated.UserID
WHERE ' + 
	@strWhere + '
ORDER BY 
	' + @SortBy + ' ' + @SortDirection)

SET ROWCOUNT 0

SELECT 
	Article.[ArticleID],
	Article.[AuthorID],
	Article.[ApproverID],
	Article.[CreatedDate],
	Article.[LastUpdate],
	Article.[Title],
	Article.[Summary],
	Article.[IsApproved],
	Article.[NumberOfViews],
	Article.[StartDate],
	Article.[EndDate],
	Article.[ModuleID],
	Article.[IsFeatured],
	Article.[ImageUrl],
	Article.[LastUpdateID],
	Article.[IsSecure],
	Article.[IsNewWindow],
	Article.[ImageUrl],
	Article.[Url],
	Article.[PageCount],
	Article.[CommentCount],
	Article.[Rating],
	Article.[RatingCount],
	Article.[MetaTitle],
	Article.[MetaDescription],
	Article.[MetaKeywords],
	Article.[PageHeadText], 
	Article.[ShortUrl],
	Author.[Email] as AuthorEmail,
	Author.[UserName] as AuthorUserName,
	Author.[FirstName] as AuthorFirstName,
	Author.[LastName] as AuthorLastName,
	Author.[DisplayName] as AuthorDisplayName,
	Updated.[Email] as LastUpdateEmail,
	Updated.[UserName] as LastUpdateUserName,
	Updated.[FirstName] as LastUpdateFirstName,
	Updated.[LastName] as LastUpdateLastName,
	Updated.[DisplayName] as LastUpdateDisplayName,
	Page.PageText as 'Body',
	{databaseOwner}{objectQualifier}Ventrian_Searches_SplitTags(Article.[ArticleID]) as 'Tags'   

FROM
	#TempItems t INNER JOIN 
	{databaseOwner}{objectQualifier}GcDesign_Searches_Article Article ON t.ArticleID = Article.ArticleID LEFT OUTER JOIN 
    {databaseOwner}{objectQualifier}GcDesign_Searches_Page Page on Page.ArticleID = Article.ArticleID AND Page.SortOrder = 0 LEFT OUTER JOIN 
	{databaseOwner}{objectQualifier}Users Author ON Article.AuthorID = Author.UserID LEFT OUTER JOIN 
    {databaseOwner}{objectQualifier}Users Updated ON Article.LastUpdateID = Updated.UserID

WHERE
	ID > @startRowIndex
	
ORDER BY
	ID

DROP TABLE #TempItems 

EXEC('
SELECT 
	COUNT(Article.ArticleID) as ''TotalRecords'' 
FROM
	{databaseOwner}{objectQualifier}GcDesign_Searches_Article Article
WHERE ' + 
	@strWhere )
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_GetArticle
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_GetArticle
	@ArticleID int
AS
SELECT
	Article.[ArticleID],
	Article.[AuthorID],
	Article.[ApproverID],
	Article.[CreatedDate],
	Article.[LastUpdate],
	Article.[Title],
	Article.[Summary],
	Article.[IsApproved],
	Article.[NumberOfViews],
	Article.[IsDraft],
	Article.[StartDate],
	Article.[EndDate],
	Article.[ModuleID],
	Article.[IsFeatured],
	Article.[ImageUrl],
	Article.[LastUpdateID],
	Article.[IsSecure],
	Article.[IsNewWindow],
	Article.[ImageUrl],
	Article.[Url],
	Article.[PageCount],
	Article.[CommentCount],
	Article.[Rating],
	Article.[RatingCount],
	Article.[MetaTitle],
	Article.[MetaDescription],
	Article.[MetaKeywords],
	Article.[PageHeadText], 
	Article.[ShortUrl],
	Author.[Email] as AuthorEmail,
	Author.[UserName] as AuthorUserName,
	Author.[FirstName] as AuthorFirstName,
	Author.[LastName] as AuthorLastName,
	Author.[DisplayName] as AuthorDisplayName,
	Updated.[Email] as LastUpdateEmail,
	Updated.[UserName] as LastUpdateUserName,
	Updated.[FirstName] as LastUpdateFirstName,
	Updated.[LastName] as LastUpdateLastName,
	Updated.[DisplayName] as UpdatedDisplayName,
	Page.PageText as 'Body',
	{databaseOwner}{objectQualifier}Ventrian_Searches_SplitTags(Article.[ArticleID]) as 'Tags'   
FROM
	{databaseOwner}{objectQualifier}GcDesign_Searches_Article Article LEFT OUTER JOIN 
		{databaseOwner}{objectQualifier}GcDesign_Searches_Page Page on Page.ArticleID = Article.ArticleID AND Page.SortOrder = 0 LEFT OUTER JOIN 
		{databaseOwner}{objectQualifier}Users Author ON Article.AuthorID = Author.UserID LEFT OUTER JOIN
		{databaseOwner}{objectQualifier}Users Updated ON Article.LastUpdateID = Updated.UserID

WHERE	
	Article.[ArticleID] = @ArticleID
GO
