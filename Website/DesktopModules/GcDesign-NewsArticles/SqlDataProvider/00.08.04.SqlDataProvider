CREATE PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_UpdateArticleCount 
	@ArticleID int, 
	@NumberOfViews int 
AS
	UPDATE 
		{databaseOwner}{objectQualifier}GcDesign_Searches_Article 
	SET
		[NumberOfViews] = @NumberOfViews 
	WHERE
		[ArticleID] = @ArticleID
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_GetCategoryListAll
GO
		
CREATE PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_GetCategoryListAll
	@ModuleID int,
	@AuthorID int,
	@ShowPending bit,
	@SortType int    
AS

;WITH CategoryHierarchy AS
(
	SELECT
		CategoryID,
		ParentID,
        CONVERT(nvarchar(max), Name) AS Path,
		1 as level,
		SortOrder * (CONVERT(bigint, '1' + REPLICATE('0', 10))) AS 'SortOrderCount'
	FROM
		{databaseOwner}{objectQualifier}GcDesign_Searches_Category
	WHERE
		ParentID = -1 
		AND
		ModuleID = @ModuleID

	UNION ALL

	SELECT
		TH.CategoryID,
		TH.ParentID,
        CONVERT(nvarchar(max), CategoryHierarchy.Path + ' \ ' + TH.Name) AS Path,
		level = level + 1,
		CategoryHierarchy.SortOrderCount + (CONVERT(bigint, CONVERT(varchar, TH.SortOrder) + REPLICATE('0', 10-level))) AS 'SortOrderCount'
	FROM
		{databaseOwner}{objectQualifier}GcDesign_Searches_Category TH INNER JOIN 
			CategoryHierarchy ON CategoryHierarchy.CategoryID = TH.ParentID
)

SELECT 
	SortOrderCount, 
	c.[CategoryID],
	c.[ParentID],
	c.[ModuleID],
	c.[Name],
	REPLICATE('.',(level-1)*2) + c.[Name] as 'NameIndented',
	c.[Image],
	c.[Description],
	c.[SortOrder],
	c.[InheritSecurity],
	c.[CategorySecurityType], 
	c.[MetaTitle],
	c.[MetaDescription],
	c.[MetaKeywords], 
	ch.[level],
	(SELECT COUNT(*) FROM {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories ac INNER JOIN {databaseOwner}{objectQualifier}GcDesign_Searches_Article a ON ac.ArticleID = a.ArticleID WHERE ac.CategoryID = c.CategoryID AND a.IsDraft = 0 AND a.IsApproved = 1 AND (@authorId IS NULL OR a.AuthorID = @authorID) AND (@ShowPending IS NOT NULL OR (a.StartDate IS NULL OR a.StartDate < GetDate()))) as 'NumberofArticles'
FROM 
	CategoryHierarchy ch INNER JOIN
		{databaseOwner}{objectQualifier}GcDesign_Searches_Category c ON ch.CategoryID = c.CategoryID
ORDER BY 
	CASE WHEN @SortType = 0 THEN CAST(ch.SortOrderCount AS VARCHAR) ELSE ch.Path END
GO

ALTER TABLE {databaseOwner}{objectQualifier}GcDesign_Searches_Page
ALTER COLUMN PageText nvarchar(max) 
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_AddPage
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_AddPage 
	@ArticleID int,
	@Title nvarchar(255), 
	@PageText nvarchar(max),
	@SortOrder int
AS

declare @count int

select @count = (select count(*) from {databaseOwner}{objectQualifier}GcDesign_Searches_Page where ArticleID = @ArticleID)

INSERT INTO {databaseOwner}{objectQualifier}GcDesign_Searches_Page (
	[ArticleID],
	[Title],
	[PageText],
	[SortOrder]
) VALUES (
	@ArticleID,
	@Title,
	@PageText,
	@count
)

select SCOPE_IDENTITY()

UPDATE {databaseOwner}{objectQualifier}GcDesign_Searches_Article
SET [PageCount] = (select count(*) from {databaseOwner}{objectQualifier}GcDesign_Searches_Page Page where Page.ArticleID = {databaseOwner}{objectQualifier}GcDesign_Searches_Article.ArticleID)
WHERE ArticleID = @ArticleID
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_UpdatePage 
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_UpdatePage 
	@PageID int, 
	@ArticleID int, 
	@Title nvarchar(255), 
	@PageText nvarchar(max), 
	@SortOrder int 
AS

UPDATE {databaseOwner}{objectQualifier}GcDesign_Searches_Page SET
	[ArticleID] = @ArticleID,
	[Title] = @Title, 
	[PageText] = @PageText,
	[SortOrder] = @SortOrder
WHERE
	[PageID] = @PageID

UPDATE {databaseOwner}{objectQualifier}GcDesign_Searches_Article
SET [PageCount] = (select count(*) from {databaseOwner}{objectQualifier}GcDesign_Searches_Page Page where Page.ArticleID = {databaseOwner}{objectQualifier}GcDesign_Searches_Article.ArticleID)
WHERE ArticleID = @ArticleID
GO
