DROP PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_GetArticleListBySearchCriteria
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_GetArticleListBySearchCriteria
	@ModuleID	int,
	@CurrentDate datetime,
	@AgedDate datetime,
	@CategoryID	varchar(2000),
	@CategoryIDCount	int,
	@CategoryIDExclude	varchar(2000),
	@MaxCount int, 
	@PageNumber int, 
	@PageSize int,
	@SortBy varchar(50),
	@SortDirection varchar(50),
	@IsApproved	bit,
	@IsDraft	bit,
	@KeyWords	nvarchar(255), 
	@AuthorID	int,
	@ShowPending bit,
	@ShowExpired bit,
	@ShowFeaturedOnly bit,
	@ShowNotFeaturedOnly bit,
	@ShowSecuredOnly bit,
	@ShowNotSecuredOnly bit,
	@ArticleIDs	varchar(255), 
	@TagID varchar(2000),
	@TagIDCount int,  
	@RssGuid nvarchar(255), 
	@CustomFieldID	int, 
	@CustomValue nvarchar(255) 
AS

-- Form Where Query

DECLARE @strWhere	nvarchar(4000)
SELECT @strWhere = 'Article.ModuleID = ' + convert(nvarchar, @ModuleId)

IF( @CurrentDate is null )
	SELECT @CurrentDate = GetDate()

IF( @ShowPending is null )
BEGIN
	SELECT @strWhere = @strWhere + ' AND (Article.StartDate is null OR (Article.StartDate <= ''' + convert(nvarchar, @CurrentDate)  + ''' AND Article.StartDate <= GetDate()))'
	
	IF( @AgedDate is not null )
		SELECT @strWhere = @strWhere + ' AND Article.StartDate >= ''' + convert(nvarchar, @AgedDate)  + ''''
END
ELSE
BEGIN
	IF( @AgedDate is not null )
			SELECT @strWhere = @strWhere + ' AND Article.StartDate >= ''' + convert(nvarchar, @AgedDate)  + ''''
END

IF( @ShowExpired is null )
BEGIN
	SELECT @strWhere = @strWhere + ' AND (Article.EndDate is null OR Article.EndDate >= ''' + convert(nvarchar, @CurrentDate)  + ''')'
END

IF (@CategoryId is not null)
BEGIN
	IF(@CategoryIDCount is not null)
	BEGIN
		SELECT @strWhere = @strWhere + ' AND Article.ArticleID in ( select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories where {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.ArticleID = Article.ArticleID and {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.CategoryID in (' + @CategoryID + ') group by articleID having count(*) > ' + convert(nvarchar, @CategoryIDCount) + ')'
	END
	ELSE
	BEGIN
		IF( CHARINDEX('-1', @CategoryID) = 0 )
		BEGIN
			SELECT @strWhere = @strWhere + ' AND Article.ArticleID in ( select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories where {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.ArticleID = Article.ArticleID and {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.CategoryID in (' + @CategoryID + '))'
		END
		ELSE
		BEGIN
			SELECT @strWhere = @strWhere + ' AND (Article.ArticleID in ( select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories where {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.ArticleID = Article.ArticleID and {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.CategoryID in (' + @CategoryID + ')) OR  Article.ArticleID not in (select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories))'
		END
	END
END

IF (@CategoryIDExclude is not null)
	SELECT @strWhere = @strWhere + ' AND Article.ArticleID not in ( select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories where {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.ArticleID = Article.ArticleID and {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.CategoryID in (' + @CategoryIDExclude + '))'

IF (@CategoryIDExclude is not null)
	SELECT @strWhere = @strWhere + ' AND Article.ArticleID not in ( select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories where {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.ArticleID = Article.ArticleID and {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.CategoryID in (' + @CategoryIDExclude + '))'

IF (@AuthorID is not null)
	SELECT @strWhere = @strWhere + ' AND Article.AuthorID = ' + convert(nvarchar, @AuthorID)

IF (@IsApproved = 1 )
	SELECT @strWhere = @strWhere + ' AND Article.IsApproved = 1'

IF (@IsApproved = 0 )
	SELECT @strWhere = @strWhere + ' AND Article.IsApproved = 0'

IF (@IsDraft = 0)
	SELECT @strWhere = @strWhere + ' AND Article.IsDraft = 0'

IF (@IsDraft = 1 )
	SELECT @strWhere = @strWhere + ' AND Article.IsDraft = 1'

IF (@ShowFeaturedOnly = 1 )
	SELECT @strWhere = @strWhere + ' AND Article.IsFeatured = 1'
	
IF (@ShowNotFeaturedOnly = 1 )
	SELECT @strWhere = @strWhere + ' AND Article.IsFeatured = 0'

IF (@ShowSecuredOnly = 1 )
	SELECT @strWhere = @strWhere + ' AND Article.IsSecure = 1'
	
IF (@ShowNotSecuredOnly = 1 )
	SELECT @strWhere = @strWhere + ' AND Article.IsSecure = 0'

IF (@Keywords is not null)
	SELECT @strWhere = @strWhere + ' AND (Article.Title LIKE N''%' + @Keywords + '%'' OR Article.Summary LIKE N''%' + @Keywords + '%'' OR ((select count(*) from {databaseOwner}{objectQualifier}GcDesign_Searches_Page Page where Page.ArticleID = Article.ArticleID and Page.PageText LIKE N''%' + @Keywords + '%'') > 0))'

IF (@CustomFieldID is not null AND @CustomValue is not null)
	SELECT @strWhere = @strWhere + ' AND Article.ArticleID IN (SELECT ArticleID FROM {databaseOwner}{objectQualifier}GcDesign_Searches_CustomValue cv WHERE cv.customFieldID = ' + convert(nvarchar, @CustomFieldID) + ' AND cv.CustomValue LIKE N''%' + @CustomValue + '%'')'

IF (@ArticleIDs is not null)
	SELECT @strWhere = @strWhere + ' AND Article.ArticleID in (' + @ArticleIDs + ')'
	
IF (@SortBy = 'Title') 
	SELECT @SortBy = 'Article.Title'

IF (@SortBy = 'IsFeatured DESC, Title') 
	SELECT @SortBy = 'IsFeatured DESC, Article.Title'

IF (@TagID is not null)
	if(@TagIDCount is not null)
		SELECT @strWhere = @strWhere + ' AND Article.ArticleID in ( select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleTag where {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleTag.ArticleID = Article.ArticleID and {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleTag.TagID in (' + @TagID + ') group by articleID having count(*) > ' + convert(nvarchar, @TagIDCount) + ')'
	else
		SELECT @strWhere = @strWhere + ' AND Article.ArticleID in ( select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleTag where {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleTag.ArticleID = Article.ArticleID and {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleTag.TagID in (' + @TagID + '))'

IF (@RssGuid is not null)
	SELECT @strWhere = @strWhere + ' AND Article.RssGuid = N''' + @RssGuid + ''''
	
-- Set Paging Options

IF( @PageNumber is null )
	SET @PageNumber = 1

IF( @PageSize is null )
	SET @PageSize = 100

SET @PageNumber = @PageNumber - 1

DECLARE @startRowIndex int
SET @startRowIndex = (@PageNumber * @PageSize)

DECLARE @maxRow int
SET @maxRow = (@startRowIndex + @PageSize)
IF( @MaxCount is not null )
BEGIN
	IF( @MaxCount < @MaxRow )
	BEGIN
		SET ROWCOUNT @MaxCount
	END
	ELSE
	BEGIN
		SET ROWCOUNT @maxRow
	END
END
ELSE
BEGIN
	SET ROWCOUNT @maxRow
END

-- Create Temporary Table

CREATE TABLE #TempItems 
(
   ID int IDENTITY,
   ArticleID int
)

EXEC('
INSERT INTO #TempItems (ArticleID) 
SELECT 
	Article.[ArticleID]
FROM
	{databaseOwner}{objectQualifier}GcDesign_Searches_Article Article LEFT OUTER JOIN 
    {databaseOwner}{objectQualifier}GcDesign_Searches_Page Page on Page.ArticleID = Article.ArticleID AND Page.SortOrder = 0 LEFT OUTER JOIN 
	{databaseOwner}{objectQualifier}Users Author ON Article.AuthorID = Author.UserID LEFT OUTER JOIN 
    {databaseOwner}{objectQualifier}Users Updated ON Article.LastUpdateID = Updated.UserID
WHERE ' + 
	@strWhere + '
ORDER BY 
	' + @SortBy + ' ' + @SortDirection)

SET ROWCOUNT 0

SELECT 
	Article.[ArticleID],
	Article.[AuthorID],
	Article.[ApproverID],
	Article.[CreatedDate],
	Article.[LastUpdate],
	Article.[Title],
	Article.[Summary],
	Article.[IsApproved],
	Article.[NumberOfViews],
	Article.[StartDate],
	Article.[EndDate],
	Article.[ModuleID],
	Article.[IsFeatured],
	Article.[ImageUrl],
	Article.[LastUpdateID],
	Article.[IsSecure],
	Article.[IsNewWindow],
	Article.[ImageUrl],
	Article.[Url],
	Article.[PageCount],
	Article.[CommentCount],
	Article.[Rating],
	Article.[RatingCount],
	Article.[FileCount],
	Article.[ImageCount],
	Article.[MetaTitle],
	Article.[MetaDescription],
	Article.[MetaKeywords],
	Article.[PageHeadText], 
	Article.[ShortUrl],
	Article.[RssGuid], 
	Author.[Email] as AuthorEmail,
	Author.[UserName] as AuthorUserName,
	Author.[FirstName] as AuthorFirstName,
	Author.[LastName] as AuthorLastName,
	Author.[DisplayName] as AuthorDisplayName,
	Updated.[Email] as LastUpdateEmail,
	Updated.[UserName] as LastUpdateUserName,
	Updated.[FirstName] as LastUpdateFirstName,
	Updated.[LastName] as LastUpdateLastName,
	Updated.[DisplayName] as LastUpdateDisplayName,
	Page.PageText as 'Body',
	{databaseOwner}{objectQualifier}Ventrian_Searches_SplitTags(Article.[ArticleID]) as 'Tags'   

FROM
	#TempItems t INNER JOIN 
	{databaseOwner}{objectQualifier}GcDesign_Searches_Article Article ON t.ArticleID = Article.ArticleID LEFT OUTER JOIN 
    {databaseOwner}{objectQualifier}GcDesign_Searches_Page Page on Page.ArticleID = Article.ArticleID AND Page.SortOrder = 0 LEFT OUTER JOIN 
	{databaseOwner}{objectQualifier}Users Author ON Article.AuthorID = Author.UserID LEFT OUTER JOIN 
    {databaseOwner}{objectQualifier}Users Updated ON Article.LastUpdateID = Updated.UserID

WHERE
	ID > @startRowIndex
	
ORDER BY
	ID

DROP TABLE #TempItems 

EXEC('
SELECT 
	COUNT(Article.ArticleID) as ''TotalRecords'' 
FROM
	{databaseOwner}{objectQualifier}GcDesign_Searches_Article Article
WHERE ' + 
	@strWhere )
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_GetNewsArchive
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_GetNewsArchive 
	@ModuleID int, 
	@CategoryID varchar(2000),
	@CategoryIDExclude 	varchar(2000),
	@AuthorID int,
	@GroupBy varchar(255),
	@ShowPending bit   
AS

DECLARE @strTop	nvarchar(2000)
DECLARE @strWhere	nvarchar(2000)

SELECT @strTop = ''
SELECT @strWhere = ''

IF (@ModuleID is not null)
	SELECT @strWhere = @strWhere + ' AND Article.ModuleID = ' + convert(nvarchar, @ModuleId)
	
IF (@CategoryId is not null)
BEGIN
	IF( CHARINDEX('-1', @CategoryID) = 0 )
	BEGIN
		SELECT @strWhere = @strWhere + ' AND Article.ArticleID in ( select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories where {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.ArticleID = Article.ArticleID and {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.CategoryID in (' + @CategoryID + '))'
	END
	ELSE
	BEGIN
		SELECT @strWhere = @strWhere + ' AND (Article.ArticleID in ( select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories where {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.ArticleID = Article.ArticleID and {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories.CategoryID in (' + @CategoryID + ')) OR Article.ArticleID not in (select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories))'
	END
END

IF (@CategoryIDExclude is not null)
BEGIN
	SELECT @strWhere = @strWhere + ' AND Article.ArticleID NOT IN (select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories ArticleCategories where ArticleCategories.CategoryID in (' + @CategoryIDExclude + '))'
END

IF (@AuthorID is not null)
	SELECT @strWhere = @strWhere + ' AND Article.AuthorID = ' + convert(nvarchar, @AuthorID)

IF (@ShowPending is null)
BEGIN
	SELECT @strWhere = @strWhere + ' AND (Article.StartDate is null or Article.StartDate < ''' + convert(nvarchar, DateAdd(mi, 1, GetDate()))  + ''')'
END

IF( @GroupBy = 'Month' )
BEGIN
EXEC('
    select Month(StartDate) as [Month], Year(StartDate) as [Year], 1 as Day, Count(*) as [Count]
    from {databaseOwner}{objectQualifier}GcDesign_Searches_Article Article
    where IsApproved = 1 and IsDraft = 0 ' + 
	    @strWhere + '
    group by Year(StartDate), Month(StartDate)
    order by [Year] desc, [Month] desc')
END
ELSE
BEGIN
EXEC('
    select 1 as [Month], Year(StartDate) as [Year], 1 as Day, Count(*) as [Count]
    from {databaseOwner}{objectQualifier}GcDesign_Searches_Article Article
    where IsApproved = 1 and IsDraft = 0 ' + 
	    @strWhere + '
    group by Year(StartDate)
    order by [Year] desc')
END
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_GetAuthorStatistics 
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}GcDesign_Searches_GetAuthorStatistics 
	@ModuleID	int, 
	@CategoryID 	varchar(2000),
	@CategoryIDExclude 	varchar(2000),
	@AuthorID int,
	@SortBy	varchar(255),
	@ShowPending bit  
AS

DECLARE @strTop	nvarchar(2000)
DECLARE @strWhere	nvarchar(2000)

SELECT @strTop = ''
SELECT @strWhere = ''

IF (@ModuleID is not null)
	SELECT @strWhere = @strWhere + ' AND Articles.ModuleID = ' + convert(nvarchar, @ModuleId)
	
IF (@CategoryId is not null)
BEGIN
	IF( CHARINDEX('-1', @CategoryID) = 0 )
	BEGIN
		SELECT @strWhere = @strWhere + ' AND Articles.ArticleID in (select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories ArticleCategories where ArticleCategories.CategoryID in (' + @CategoryID + '))'
	END
	ELSE
	BEGIN
		SELECT @strWhere = @strWhere + ' AND (Articles.ArticleID in (select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories ArticleCategories where ArticleCategories.CategoryID in (' + @CategoryID + ')) OR Articles.ArticleID not in (select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories))'
	END
END

IF (@CategoryIDExclude is not null)
BEGIN
	SELECT @strWhere = @strWhere + ' AND Articles.ArticleID NOT IN (select ArticleID from {databaseOwner}{objectQualifier}GcDesign_Searches_ArticleCategories ArticleCategories where ArticleCategories.CategoryID in (' + @CategoryIDExclude + '))'
END

IF (@AuthorID is not null)
	SELECT @strWhere = @strWhere + ' AND Articles.AuthorID = ' + convert(nvarchar, @AuthorID)

IF (@ShowPending is null )
	SELECT @strWhere = @strWhere + ' AND (Articles.StartDate is null OR Articles.StartDate < ''' + convert(nvarchar, DateAdd(mi, 1, GetDate()))  + ''')'

EXEC('
SELECT     
	UserID, UserName, DisplayName, FirstName, LastName, count(*) as ''ArticleCount''   
FROM         
	{databaseOwner}{objectQualifier}Users Users, {databaseOwner}{objectQualifier}GcDesign_Searches_Article Articles
where Articles.IsApproved = 1 and Articles.IsDraft = 0 and Users.UserID = Articles.AuthorID ' + 
	@strWhere + ' 
GROUP BY 
	UserID, UserName, DisplayName, FirstName, LastName
ORDER BY ' +
	@SortBy)
GO
