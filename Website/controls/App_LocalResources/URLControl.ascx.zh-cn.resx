<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Type.Text" xml:space="preserve">
    <value>链接类型：</value>
  </data>
  <data name="URLType.Text" xml:space="preserve">
    <value>URL(外部链接)</value>
  </data>
  <data name="TabType.Text" xml:space="preserve">
    <value>页面(本站点内)</value>
  </data>
  <data name="FileType.Text" xml:space="preserve">
    <value>文件(本站点内)</value>
  </data>
  <data name="UserType.Text" xml:space="preserve">
    <value>用户(本站点内)</value>
  </data>
  <data name="NoneType.Text" xml:space="preserve">
    <value>无</value>
  </data>
  <data name="URL.Text" xml:space="preserve">
    <value>URL地址：&lt;br/&gt;</value>
  </data>
  <data name="Select.Text" xml:space="preserve">
    <value>从已有URL中选取</value>
  </data>
  <data name="Add.Text" xml:space="preserve">
    <value>添加新URL</value>
  </data>
  <data name="Delete.Text" xml:space="preserve">
    <value>从列表中删除URL&lt;br/&gt;</value>
  </data>
  <data name="Tab.Text" xml:space="preserve">
    <value>选择本站点网页：&lt;br/&gt;</value>
  </data>
  <data name="Folder.Text" xml:space="preserve">
    <value>文件路径：&lt;br/&gt;</value>
  </data>
  <data name="File.Text" xml:space="preserve">
    <value>文件名称：&lt;br/&gt;</value>
  </data>
  <data name="Upload.Text" xml:space="preserve">
    <value>上传新文件</value>
  </data>
  <data name="Save.Text" xml:space="preserve">
    <value>上传选定的文件</value>
  </data>
  <data name="Cancel.Text" xml:space="preserve">
    <value>选择已有文件</value>
  </data>
  <data name="Track.Text" xml:space="preserve">
    <value>是否跟踪链接的点击次数？&lt;br/&gt;</value>
  </data>
  <data name="Log.Text" xml:space="preserve">
    <value>是否记录点击该链接的用户和点击时间？&lt;br/&gt;</value>
  </data>
  <data name="NewWindow.Text" xml:space="preserve">
    <value>是否在新浏览器窗口中打开该链接？&lt;br/&gt;</value>
  </data>
  <data name="UploadError.Text" xml:space="preserve">
    <value>无效的文件类型{1}。请选择以下类型的文件：{0}</value>
  </data>
  <data name="NoPermission.Text" xml:space="preserve">
    <value>权限不足，无法浏览本站点的文件</value>
  </data>
  <data name="Root.Text" xml:space="preserve">
    <value>根目录</value>
  </data>
  <data name="User.Text" xml:space="preserve">
    <value>输入本站点用户名：&lt;br/&gt;</value>
  </data>
  <data name="NoUser.Text" xml:space="preserve">
    <value>输入的用户名不存在。</value>
  </data>
  <data name="NoWritePermission.Text" xml:space="preserve">
    <value>权限不足，无法上传文件</value>
  </data>
  <data name="ImageType.Text" xml:space="preserve">
    <value>系统图片</value>
  </data>
  <data name="Image.Text" xml:space="preserve">
    <value>图片：&lt;br/&gt;</value>
  </data>
</root>